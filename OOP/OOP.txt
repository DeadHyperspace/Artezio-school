Есть два подхода к написанию кода:
Процедурное программирование и Объектно-ориентированное программирование
При написании программ используя ООП мы пользуемся его следующими принципами:

	Классы, объекты и методы.
		Класс - это набор переменных и методов, определяющих «жизнь» конкретного объекта.
		С помощью одного класса можно сделать много конкретных его реализаций– объектов.
		Метод это функция или процедура внутри класса.
	
	Инкапсуляция – это объединение данных и методов объекта и определение способов их хранения, при которых данные и методы защищаются от неверного использования,
	а также от нежелательного вмешательства пользователя нашей программы.
		Примеры реализации инкапсуляции в некоторых языка программирования
			• С++: public; protected; private; static (public, protected, private);
			• Python: “public”; “static public”;
			• Java: public, default, protected, private. 
	
	Полиморфизм – это свойство системы использовать объекты с одинаковым интерфейсом без информации о типе и внутренней структуре объекта.
		Язык программирования поддерживает полиморфизм, если классы с одинаковой спецификацией могут иметь различную реализацию — например,
		реализация класса может быть изменена в процессе наследования.
		Кратко смысл полиморфизма можно выразить фразой: «Один интерфейс, множество реализаций».
		
		Перегрузка операторов в программировании — один из способов реализации полиморфизма,
		заключающийся в возможности одновременного существования в одной области видимости нескольких различных вариантов применения оператора,
		имеющих одно и то же имя, но различающихся типами параметров, к которым они применяются.
		
		Параметрический полиморфизм в языках программирования - это свойство, позволяющее обрабатывать значения разных типов идентичным образом,
		то есть исполнять один и тот же код для данных разных типов.
		
	Наследование – это процесс приобретения одним классом некоторых свойств другого класса т.е: 
		Это свойство системы, позволяющее описать новый класс на основе уже существующего с частично или полностью 
		заимствующейся функциональностью. 
		Класс, от которого производится наследование, называется базовым, родительским или суперклассом. 
		Новый класс — потомком, наследником, дочерним или производным классом.
		
	Множественное наследование - класс может иметь более одного суперкласса (непосредственного класса-родителя).
	
	Абстракция в объектно-ориентированном программировании — это использование только тех характеристик объекта, 
	которые с достаточной точностью представляют его в данной системе.
	
		Основная идея состоит в том, чтобы представить объект минимальным набором полей и методов и при этом с достаточной точностью для решаемой задачи.
		
	Агрегация – инициализация члена класса переданным объектом другого класса (объект другого класса создан отдельно, но связывается с классом).

	Композиция– один класс является членом другого класса и существует только вместе с ним.